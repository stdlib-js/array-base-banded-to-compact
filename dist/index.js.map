{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar max = require( '@stdlib/math-base-special-fast-max' );\nvar min = require( '@stdlib/math-base-special-fast-min' );\nvar zeros2d = require( '@stdlib/array-base-zeros2d' );\n\n\n// MAIN //\n\n/**\n* Converts a two-dimensional banded nested array to compact banded storage.\n*\n* @param {Array<Array>} arr - input two-dimensional array\n* @param {NonNegativeInteger} ku - number of super-diagonals\n* @param {NonNegativeInteger} kl - number of sub-diagonals\n* @param {boolean} colexicographic - specifies whether to store diagonals in colexicographic access order\n* @returns {Array<Array>} output array\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 3, 12, 4 ],\n*     [ 0, 5, 13 ]\n* ];\n*\n* var out = toCompact( M, 1, 1, false );\n* // returns [ [ 0, 2, 4 ], [ 11, 12, 13 ], [ 3, 5, 0 ] ]\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 3, 12, 4 ],\n*     [ 0, 5, 13 ]\n* ];\n*\n* var out = toCompact( M, 1, 1, true );\n* // returns [ [ 0, 11, 3 ], [ 2, 12, 5 ], [ 4, 13, 0 ] ]\n*/\nfunction toCompact( arr, ku, kl, colexicographic ) {\n\tvar out;\n\tvar to;\n\tvar M;\n\tvar N;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tM = arr.length;\n\tN = arr[ 0 ].length;\n\n\t// Check whether to store diagonals along the columns...\n\tif ( colexicographic ) {\n\t\tout = zeros2d( [ N, ku+kl+1 ] );\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tto = out[ j ];\n\t\t\tk = ku - j;\n\t\t\tfor ( i = max( 0, j-ku ); i < min( M, j+kl+1 ); i++ ) {\n\t\t\t\tto[ k+i ] = arr[ i ][ j ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// Store diagonals along the rows...\n\tout = zeros2d( [ ku+kl+1, N ] );\n\tfor ( j = 0; j < N; j++ ) {\n\t\tk = ku - j;\n\t\tfor ( i = max( 0, j-ku ); i < min( M, j+kl+1 ); i++ ) {\n\t\t\tout[ k+i ][ j ] = arr[ i ][ j ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toCompact;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a two-dimensional banded nested array to compact banded storage.\n*\n* @module @stdlib/array-base-banded-to-compact\n*\n* @example\n* var toCompact = require( '@stdlib/array-base-banded-to-compact' );\n*\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 3, 12, 4 ],\n*     [ 0, 5, 13 ]\n* ];\n*\n* var out = toCompact( M, 1, 1, false );\n* // returns [ [ 0, 2, 4 ], [ 11, 12, 13 ], [ 3, 5, 0 ] ]\n*\n* @example\n* var toCompact = require( '@stdlib/array-base-banded-to-compact' );\n*\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 3, 12, 4 ],\n*     [ 0, 5, 13 ]\n* ];\n*\n* var out = toCompact( M, 1, 1, true );\n* // returns [ [ 0, 11, 3 ], [ 2, 12, 5 ], [ 4, 13, 0 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,oCAAqC,EACpDC,EAAM,QAAS,oCAAqC,EACpDC,EAAU,QAAS,4BAA6B,EAkCpD,SAASC,EAAWC,EAAKC,EAAIC,EAAIC,EAAkB,CAClD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAMJ,GAJAJ,EAAIN,EAAI,OACRO,EAAIP,EAAK,CAAE,EAAE,OAGRG,EAAkB,CAEtB,IADAC,EAAMN,EAAS,CAAES,EAAGN,EAAGC,EAAG,CAAE,CAAE,EACxBO,EAAI,EAAGA,EAAIF,EAAGE,IAGnB,IAFAJ,EAAKD,EAAKK,CAAE,EACZC,EAAIT,EAAKQ,EACHD,EAAIZ,EAAK,EAAGa,EAAER,CAAG,EAAGO,EAAIX,EAAKS,EAAGG,EAAEP,EAAG,CAAE,EAAGM,IAC/CH,EAAIK,EAAEF,CAAE,EAAIR,EAAKQ,CAAE,EAAGC,CAAE,EAG1B,OAAOL,CACR,CAGA,IADAA,EAAMN,EAAS,CAAEG,EAAGC,EAAG,EAAGK,CAAE,CAAE,EACxBE,EAAI,EAAGA,EAAIF,EAAGE,IAEnB,IADAC,EAAIT,EAAKQ,EACHD,EAAIZ,EAAK,EAAGa,EAAER,CAAG,EAAGO,EAAIX,EAAKS,EAAGG,EAAEP,EAAG,CAAE,EAAGM,IAC/CJ,EAAKM,EAAEF,CAAE,EAAGC,CAAE,EAAIT,EAAKQ,CAAE,EAAGC,CAAE,EAGhC,OAAOL,CACR,CAKAT,EAAO,QAAUI,IC5CjB,IAAIY,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "max", "min", "zeros2d", "toCompact", "arr", "ku", "kl", "colexicographic", "out", "to", "M", "N", "i", "j", "k", "main"]
}
